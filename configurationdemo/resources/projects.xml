<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--

     Copyright 2014-2016 CyberVision, Inc.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.

-->

<projectsConfig
        xmlns="http://www.kaaproject.org"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.kaaproject.org ../../common/src/main/resources/demo/projects/demo_projects_schema.xsd">
    <project id="configuration_demo_java">
        <name>Configuration Java demo</name>
        <description>Kaa Configuration subsystem demo app based on Java SDK</description>
        <details>
            <![CDATA[
<p>
	This sample application uses the <b>Configuration Extension</b> based on the <a href="http://kaaproject.github.io/kaa/docs/Glossary/#sdk-type" target="_blank">Kaa Java SDK</a>.
	This extension enables <a href="http://kaaproject.github.io/kaa/docs/Glossary/#kaa-client" target="_blank">Kaa client</a> to update the <a href="http://kaaproject.github.io/kaa/docs/Glossary/#endpoint-ep" target="_blank">endpoint</a> configuration by receiving the data from <a href="http://kaaproject.github.io/kaa/docs/Glossary/#kaa-server" target="_blank">Kaa server</a>.
</p>

<p>
	The default configuration is statically stored in the Kaa SDK and is used in case no updates from the <a href="http://kaaproject.github.io/kaa/docs/Glossary/#operations-service" target="_blank">Operations service</a> are available.
	The latest configuration is stored locally in the configuration storage using <code>kaaClient.setConfigurationStorage( ... )</code> API call and can be obtained regardless of the Operations service availability.
	This sample application stores the configuration in the saved_config.cfg file located in the sample application working directory.
</p>

<p>
	This sample application also includes a configuration update listener triggered by <code>kaaClient.addConfigurationListener( ... )</code> API call to receive latest configuration update as soon as it becomes available.
</p>

<h1>Launching</h1>

<p>
	To launch this sample application on the Kaa Java SDK, you need to prepare your Java SDK environment.
	To do this, follow the instructions in <a href="http://kaaproject.github.io/kaa/docs/Programming-guide/Using-Kaa-endpoint-SDKs/Java/" target="_blank">Using Kaa endpoint SDKs</a>.
</p>

<p>
	For sample applications that utilize Kaa Java SDK, both the binary files (.jar archive) and the source code (.tar.gz archive) are available for download.
	If you want to only launch the sample application, download the binary files.
	If you want to explore the source code of the sample application, download the source code archive.
</p>

<h2>Install using the binary files</h2>

To install the Configuration sample application using the binary files:
	
<ol>
	<li>
		Click the <b>Binary</b> button.
		A binary build window will open.
		Click <b>Ok</b> and download the .jar file.
	</li>
	<li>
		Run the following command from the directory containing the downloaded .jar archive.
		
		<pre>
			$ java -jar ConfigurationDemo.jar 	
		</pre>
		
		The sample application console will show the following messages.
		
		<pre>
			[main] INFO  o.k.k.d.c.ConfigurationDemo - Configuration demo started
			[main] INFO  o.k.k.d.c.ConfigurationDemo - Endpoint ID: sObsTu7g696tYc2wBpIYtO9NQgk=
			[pool-4-thread-1] INFO  o.k.k.d.c.ConfigurationDemo - Getting sampling period value from default configuration
			[pool-2-thread-1] INFO  o.k.k.d.c.ConfigurationDemo - Sampling period is now set to 1 seconds
			[pool-4-thread-1] INFO  o.k.k.d.c.ConfigurationDemo - Configuration was updated
			[pool-2-thread-1] INFO  o.k.k.d.c.ConfigurationDemo - Sampling period is now set to 10 seconds
			[main] INFO  o.k.k.d.c.ConfigurationDemo - --= Press any key to exit =--=
		</pre>
		
	</li>
</ol>

<h2>Install using the source code</h2>

To install the Configuration sample application using the source code:

<ol>
	<li>
		Click the <b>Source</b> button.
		A project source download window will open.
		Click <b>Ok</b> and download the .tar.gz file.
	</li>
	<li>
		Unpack the downloaded archive.
	</li>
	<li>
		To build from new sources you need to have Apache Ant installed on your host machine.
		To install Apache ant, run the following command from the directory containing the unpacked sources.
		
		<pre>
			$ ant debug
		</pre>
		
		To launch the sample application from the previously built sources run the following command from the directory containing the sources.
		
		<pre>
			$ java -jar build/jar/Configuration.jar
		</pre>
	</li>
</ol>
	
If you want to modify the sample application source code or create your own applications using the Kaa platform, see <a href="http://kaaproject.github.io/kaa/docs/Programming-guide/Your-first-Kaa-application/" target="_blank">Your first Kaa application</a>.

<h1>Troubleshooting</h1>

For troubleshooting information, see <a href="http://kaaproject.github.io/kaa/docs/Administration-guide/Troubleshooting/" target="_blank">Troubleshooting</a>.
            ]]>
        </details>

        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project 
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->

        <sdkLanguage>JAVA</sdkLanguage>

        <!-- Specifies the target runtime platforms according to the instructions from the project details section
             (ex. LINUX_X86, ANDROID, IOS, ESP8266, etc., to get list of all possible options
             see 'platform' type in demo_projects_schema.xsd schema) -->

        <platforms>LINUX_X86 WINDOWS_X86</platforms>
        <features>CONFIGURATION</features>
        <complexity>BASIC</complexity>
        <bundleId>configuration_demos</bundleId>
        <sourceArchive>java/configuration_demo.tar.gz</sourceArchive>
        <projectFolder>JConfigurationDemo</projectFolder>
        <sdkLibDir>JConfigurationDemo/lib</sdkLibDir>
        <destBinaryFile>JConfigurationDemo/build/jar/ConfigurationDemo.jar</destBinaryFile>
    </project>
    <project id="configuration_demo_c">
        <name>Configuration C demo</name>
        <description>Kaa Configuration subsystem demo app based on C SDK</description>
        <details>
            <![CDATA[
This simple app demonstrates capabilities of the Kaa Configuration subsystem on the C SDK.

<h2>Installation</h2>
Download the source code by clicking the "Source" button on the left. Unpack the downloaded archive and run the application using the following command in the console:
<pre>
$ ./build.sh deploy
</pre>

<h2>Playing around</h2>
Make sure that the Kaa Sandbox is up and running. After starting the "Configuration C demo" app, you will obtain the latest configuration accessible by the endpoint. This configuration is provided as a list of links to Kaa documentation.<br/><br/>

Now it's time to test things out: navigate to the Kaa server administrative interface by clicking the "Administrative console" link at the top of the Sandbox window. Log in as a tenant developer (devuser / devuser123), and navigate to the "Configuration demo" application, then select "Endpoint groups". From here you can manage endpoint groups and update endpoint configuration. Make sure you have tried updating configuration for endpoint group "All" and received it on your device. Do not forget to activate the updated configuration - otherwise the endpoint will not be able to receive it.<br/><br/>

Please note that all the features of Administration UI are also supported by REST API.

<h2>What's next?</h2>

For more background on the Kaa Configuration subsystem please refer to the corresponding programming guide and design reference sections.
            ]]>
        </details>

        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project 
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->

        <sdkLanguage>C</sdkLanguage>

        <!-- Specifies the target runtime platforms according to the instructions from the project details section
             (ex. LINUX_X86, ANDROID, IOS, ESP8266, etc., to get list of all possible options
             see 'platform' type in demo_projects_schema.xsd schema) -->

        <platforms>LINUX_X86</platforms>
        <features>CONFIGURATION</features>
        <complexity>BASIC</complexity>
        <bundleId>configuration_demos</bundleId>
        <sourceArchive>c/configuration_demo.tar.gz</sourceArchive>
        <projectFolder>CConfigurationDemo</projectFolder>
        <sdkLibDir>CConfigurationDemo/libs/kaa</sdkLibDir>
        <destBinaryFile></destBinaryFile>
    </project>
    <project id="configuration_demo_cpp">
        <name>Configuration C++ demo</name>
        <description>Kaa Configuration subsystem demo app based on C++ SDK</description>
        <details>
            <![CDATA[
This simple app demonstrates capabilities of the Kaa Configuration subsystem on the C++ SDK.

<h2>Installation</h2>
Download the source code by clicking the "Source" button on the left. Unpack the downloaded archive and run the application using the following command in the console:
<pre>
$ ./build.sh deploy
</pre>

<h2>Playing around</h2>
Make sure that the Kaa Sandbox is up and running. After starting the "Configuration C++ demo" app, you will obtain the latest configuration accessible by the endpoint. This configuration is provided as a list of links to Kaa documentation.<br/><br/>

Now it's time to test things out: navigate to the Kaa server administrative interface by clicking the "Administrative console" link at the top of the Sandbox window. Log in as a tenant developer (devuser / devuser123), and navigate to the "Configuration demo" application, then select "Endpoint groups". From here you can manage endpoint groups and update endpoint configuration. Make sure you have tried updating configuration for endpoint group "All" and received it on your device. Do not forget to activate the updated configuration - otherwise the endpoint will not be able to receive it.<br/><br/>

Please note that all the features of Administration UI are also supported by REST API.

<h2>What's next?</h2>

Please note that all the features of Administration UI are also supported by REST API.
            ]]>
        </details>


        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project 
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->

        <sdkLanguage>CPP</sdkLanguage>

        <!-- Specifies the target runtime platforms according to the instructions from the project details section
             (ex. LINUX_X86, ANDROID, IOS, ESP8266, etc., to get list of all possible options
             see 'platform' type in demo_projects_schema.xsd schema) -->

        <platforms>LINUX_X86</platforms>
        <features>CONFIGURATION</features>
        <complexity>BASIC</complexity>
        <bundleId>configuration_demos</bundleId>
        <sourceArchive>cpp/configuration_demo.tar.gz</sourceArchive>
        <projectFolder>CppConfigurationDemo</projectFolder>
        <sdkLibDir>CppConfigurationDemo/libs/kaa</sdkLibDir>
        <destBinaryFile></destBinaryFile>
    </project>
    <project id="configuration_demo_objc">
        <name>Configuration Objective-C demo</name>
        <description>Kaa Configuration subsystem demo app based on Objective-C SDK</description>
        <details>
            <![CDATA[
This simple app demonstrates capabilities of the Kaa Configuration subsystem on the Objective-C SDK.

<h2>Installation</h2>
Download the source code by clicking the "Source" button on the left. Unpack the downloaded archive and run the application using the following command in the console:
<pre>
$ ./build.sh
</pre>

<h2>Playing around</h2>
Make sure that the Kaa Sandbox is up and running. After starting the "Configuration Objective-C demo" app, you will obtain the latest configuration accessible by the endpoint. This configuration is provided as a list of links to Kaa documentation.<br/><br/>

Now it's time to test things out: navigate to the Kaa server administrative interface by clicking the "Administrative console" link at the top of the Sandbox window. Log in as a tenant developer (devuser / devuser123), and navigate to the "Configuration demo" application, then select "Endpoint groups". From here you can manage endpoint groups and update endpoint configuration. Make sure you have tried updating configuration for endpoint group "All" and received it on your device. Do not forget to activate the updated configuration - otherwise the endpoint will not be able to receive it.<br/><br/>

Please note that all the features of Administration UI are also supported by REST API.

<h2>What's next?</h2>

Please note that all the features of Administration UI are also supported by REST API.
            ]]>
        </details>
        <sdkLanguage>OBJC</sdkLanguage>
        <platforms>IOS</platforms>
        <features>CONFIGURATION</features>
        <complexity>BASIC</complexity>
        <bundleId>configuration_demos</bundleId>
        <sourceArchive>objc/configuration_demo.tar.gz</sourceArchive>
        <projectFolder>ObjCConfigurationDemo</projectFolder>
        <sdkLibDir>ObjCConfigurationDemo/libs</sdkLibDir>
        <destBinaryFile></destBinaryFile>
    </project>
    <bundle id="configuration_demos">
        <name>Configuration demos</name>
        <description>Kaa Configuration subsystem demo applications bundle</description>
        <details>
            <![CDATA[
This bundle contains applications that demonstrates capabilities of the Kaa Configuration subsystem.

Please note that all the features of <a href="http://docs.kaaproject.org/display/KAA/Administration+UI+guide">Administrative UI</a> are also supported by <a href="http://docs.kaaproject.org/display/KAA/Admin+REST+API">REST API</a>.

<h2>What's next?</h2>
For more background on the Kaa Configuration subsystem please refer to the corresponding <a href="http://docs.kaaproject.org/display/KAA/Distributing+data+to+endpoints">programming guide</a> and <a href="http://docs.kaaproject.org/display/KAA/Configuration">design reference</a> sections.
]]>
        </details>
    </bundle>
</projectsConfig>
