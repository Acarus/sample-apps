<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--

     Copyright 2014-2016 CyberVision, Inc.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.

-->

<projectsConfig 
    xmlns="http://www.kaaproject.org"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.kaaproject.org ../../common/src/main/resources/demo/projects/demo_projects_schema.xsd">
    <project id="activation_demo">
        <name>Activation demo</name>
        <description>Activation application that demonstrates Kaaâ€™s server profiling, grouping, and configuration management capabilities</description>
        <details>
            <![CDATA[
This Activation app demonstrate server side profile feature usage. It allows to activate/deactivate device based on key hash using Kaa REST API.

<h2>Installation</h2>
Download the jar file to your desktop by clicking the "Binary" button on the left. Make sure that you have Java runtime installed. Application can run in two modes: client and admin. The mode is specified by command line arguments.<br/>
To run in "admin" mode use the following command in the console:
<pre>
$ java -jar ConfigurationDemo.jar admin ipAddress
</pre>
Where ipAddress is address of Kaa node, on which REST Admin API is deployed.
To run in "client" mode use the following command in the console:
<pre>
$ java -jar ConfigurationDemo.jar client
</pre>
<h2>Playing around</h2>
Make sure that the Kaa Sandbox is up and running. When using the "Activation Demo" app in "admin" mode you will be able to to activate/deactivate any endoint associated with Activation app. Endpoint activation and deactivation are performed by updating server profile using REST API.<br/><br/>
"Activation Demo" app in "client" mode creates and registers one Kaa endpoint (per application instance). In this mode app displays current state of endpoint (active or inactive). Once activation/deactivation is performed via "admin" application your endpoint will be supplied with new configuration data according to server profile change<br/><br/>

To understand better how this app works, you should navigate to the Kaa server administrative interface by clicking the "Administrative console" link at the top of the Sandbox window. Log in as a tenant developer (devuser / devuser123), and go to the "Activation demo" application.  then select "Schemas"->"Server profile". The app uses one schema version.It contains one value: "active" (boolean). The Kaa server uses this value to filter endpoints by their profile contents. Server profiles of endpoints are updated either via Admin Console, or via REST API (i.e. "Activation app" in "admin" mode)<br/><br/>

Now open the "Configuration" schema under "Schemas" and select version 2 to see the structure of the configuration data. There is one value in the configuration schema: "active" (boolean). This value is what's actually sent to each endpoint by server and specifies the endpoint state (active or inactive)<br/><br/>

Finally, it's time to see what determines the configuration data. Go to the "Endpoint groups" section. There are three endpoint groups available.<br/><br/>

The endpoints are put into either "Active device group" or "Inactive device group" depending on the "active" variable value in the server profile. See corresponding profile filters in the group details window. Each endpoint group defines its own configuration (active or inactive) - and when server profile for some EP is changed, the EP is moved from one group to another and this results in updated configuration being pushed by server to corresponding EP.

Please note that all the features of Administration UI are also supported by REST API.

<h2>What's next?</h2>

For more background on the Kaa endpoint profiling, server profiling, grouping, and configuration management features, please refer to the programming guide and design reference.
        	]]>
        </details>
        
        <!-- Specifies the source code language of Kaa endpoint SDK which is used by this project 
             (ex. JAVA, CPP, etc., to get list of all possible options
             see 'sdkLanguage' type in demo_projects_schema.xsd schema) -->
             
        <sdkLanguage>JAVA</sdkLanguage>
        
        <!-- Specifies the target runtime platforms according to the instructions from the project details section
             (ex. LINUX_X86, ANDROID, IOS, ESP8266, etc., to get list of all possible options
             see 'platform' type in demo_projects_schema.xsd schema) -->
             
        <platforms>LINUX_X86 WINDOWS_X86</platforms>
        <features>CONFIGURATION</features>
        <complexity>BASIC</complexity>
        <sourceArchive>java/activation_demo.tar.gz</sourceArchive>
        <projectFolder>JActivationDemo</projectFolder>
        <sdkLibDir>JActivationDemo/lib</sdkLibDir>
        <destBinaryFile>JActivationDemo/build/jar/ActivationDemo.jar</destBinaryFile>
    </project>
</projectsConfig>
